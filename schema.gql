# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  pid: String!
  gender: UserGenders!
  roles: [UserRoles!]!
  email: String!
  password: String!
  lastName: String!
  firstName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

enum UserGenders {
  MALE
  FEMALE
}

enum UserRoles {
  ADMIN
  TEACHER
  STUDENT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SignInOutput {
  accessToken: String!
  expiresIn: Float!
  user: User!
}

type Report {
  id: Int!
  status: ReportStatus!
  type: ReportTypes!
  referenceId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  emitter: User!
}

enum ReportStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum ReportTypes {
  POST
  PROFILE
  MESSAGE
}

type Like {
  id: Int!
  createdAt: DateTime!
  emitter: User!
  receiver: User!
  post: Post!
}

type Post {
  id: Int!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  author: User!
  parent: Post!
  children: [Post!]!
  likes: [Like!]!
}

type PostsOutput {
  edges: [PostEdge!]
  nodes: [Post!]
  hasMore: Boolean!
}

type PostEdge {
  node: Post
  cursor: String
}

type Query {
  posts(input: PostsInput!): PostsOutput!
  emailExists(email: String!): Boolean!
  currentUser: User!
}

input PostsInput {
  take: Int = 10
  cursor: String
}

type Mutation {
  createReport(input: CreateReportInput!): Report!
  updateReport(input: UpdateReportInput!, id: Float!): Report!
  createPost(input: CreatePostInput!): Post!
  toggleBlock(receiverId: Float!): Boolean!
  signIn(input: SignInInput!): SignInOutput!
  refresh: SignInOutput!
  signOut: Boolean!
  createUser(input: CreateUserInput!): User!
  toggleLike(postId: Float!): Boolean!
}

input CreateReportInput {
  referenceId: Int!
  type: ReportTypes!
}

input UpdateReportInput {
  status: ReportStatus!
}

input CreatePostInput {
  content: String!
  parentId: Float
}

input SignInInput {
  email: String!
  password: String!
  remember: Boolean!
}

input CreateUserInput {
  email: String!
  password: String!
  birthDate: DateTime!
  lastName: String!
  firstName: String!
  gender: UserGenders!
  roles: [UserRoles!]
}
